//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace litext.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("litext.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?php
        ///if ($argc != 2) exit(&quot;命令行参数长度应为2，传参错误&quot;);
        ///$JsonStr = urldecode($argv[1]);
        ///if(substr($JsonStr,0,1)!=&quot;{&quot;)
        ///{
        ///	$file=$JsonStr;
        ///	$JsonStr=file_get_contents($JsonStr);
        ///	$JsonStr = urldecode($JsonStr);
        ///	unlink($file);
        ///}
        ///$JsonArray = json_decode($JsonStr,true);
        /////以上部分是将传入的变量数据urldecode以后再转化成json变量，请不要修改
        ///
        /////$JsonArray[&apos;字符&apos;]=&apos;这是文本变量&apos;;
        /////$JsonArray[&apos;数字&apos;]=20191010;
        /////$JsonArray[&apos;列表&apos;][]=&apos;增加一个元素&apos;;
        ///
        /////以下是对json变量进行编码转成json数据，返回给调用程序，请不要修改
        ///echo json_encode($JsonArray);
        ///?&gt; 的本地化字符串。
        /// </summary>
        internal static string php {
            get {
                return ResourceManager.GetString("php", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 import sys,importlib,datetime
        ///from urllib import parse
        ///import json
        ///
        ///if len(sys.argv)!= 2:
        ///    print(len(sys.argv))
        ///    print(&quot;命令行参数长度应为2，传参错误&quot;)
        ///    sys.exit()
        ///else:
        ///    JsonStr = parse.unquote(sys.argv[1])
        ///    if (JsonStr[0:2] != &apos;&apos;&apos;{&quot;&apos;&apos;&apos;):
        ///        file_object = open(JsonStr)
        ///        try:
        ///            JsonStr = file_object.read()
        ///            JsonStr = parse.unquote(JsonStr)
        ///        finally:
        ///            file_object.close()
        ///    JsonArray = json.loads(JsonStr)
        ///	
        ///#以上部分是将传入的变量数据urldecode以后再转化成json变量，请不要修改
        ///
        ///    #J [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string python {
            get {
                return ResourceManager.GetString("python", resourceCulture);
            }
        }
    }
}
